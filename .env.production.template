# Production Environment Configuration Template
# Copy this file to .env and fill in the values
# NEVER commit the actual .env file to version control!

# ============================================================================
# Django Configuration
# ============================================================================

# CRITICAL: Must be False in production
DJANGO_DEBUG=False

# Generate a strong secret key (minimum 50 characters)
# Use: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=your-secret-key-here-minimum-50-characters-required

# Comma-separated list of allowed hosts (your domain names)
# Example: yourdomain.com,www.yourdomain.com,your-load-balancer-url.amazonaws.com
DJANGO_ALLOWED_HOSTS=*

# ============================================================================
# Database Configuration
# ============================================================================

# PostgreSQL connection string
# Format: postgres://username:password@host:port/database
# Example: postgres://dbuser:dbpass123@mydb.rds.amazonaws.com:5432/letsgetcrypto
DATABASE_URL=postgres://postgres:password@localhost:5432/letsgetcrypto

# ============================================================================
# Security Settings
# ============================================================================

# Enable SSL redirect (set to True if using HTTPS)
DJANGO_SECURE_SSL_REDIRECT=False

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
DJANGO_LOG_LEVEL=INFO

# ============================================================================
# External API Keys (Optional)
# ============================================================================

# Anthropic Claude API Key (for AI-powered analysis)
# Get your key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=

# CoinGecko Pro API Key (optional, for higher rate limits)
COINGECKO_API_KEY=

# NewsAPI Key (optional, for news sentiment analysis)
NEWSAPI_KEY=

# ============================================================================
# Trading Configuration (Optional)
# ============================================================================

# Binance API credentials (for automated trading)
BINANCE_API_KEY=
BINANCE_API_SECRET=

# Use testnet for development (True) or mainnet for production (False)
BINANCE_TESTNET=True

# ============================================================================
# AWS Configuration (for deployment)
# ============================================================================

# AWS Region
AWS_REGION=us-east-1

# ECR Repository Name
ECR_REPOSITORY=letsgetcrypto

# ECS Cluster Name
ECS_CLUSTER_NAME=letsgetcrypto-cluster

# ECS Service Name
ECS_SERVICE_NAME=letsgetcrypto-service

# ============================================================================
# MCP Server Configuration (Optional)
# ============================================================================

# URL of the crypto API (used by MCP server)
CRYPTO_API_URL=http://localhost:8000

# ============================================================================
# Monitoring and Alerts (Optional)
# ============================================================================

# CloudWatch Log Group
CLOUDWATCH_LOG_GROUP=/aws/ecs/letsgetcrypto

# Alert Email
ALERT_EMAIL=your-email@example.com

# ============================================================================
# Performance Tuning
# ============================================================================

# Gunicorn workers (2-4 x num_cores)
GUNICORN_WORKERS=4

# Request timeout (seconds)
REQUEST_TIMEOUT=30

# Database connection pool size
DB_CONN_MAX_AGE=600

# ============================================================================
# Feature Flags (Optional)
# ============================================================================

# Enable feedback loop system
ENABLE_FEEDBACK_LOOP=True

# Enable Claude AI integration
ENABLE_CLAUDE_AI=False

# Enable automated trading
ENABLE_AUTO_TRADING=False

# ============================================================================
# Cache Configuration (Optional)
# ============================================================================

# Redis URL (if using Redis for caching)
REDIS_URL=redis://localhost:6379/0

# Cache timeout (seconds)
CACHE_TIMEOUT=300
